{"version":3,"sources":["components/HeaderNav.js","components/DeleteButton.js","components/PlayerList.js","components/AddPlayerForm.js","components/MenuOptions.js","components/GameStatusOne.js","components/GameStatusThree.js","components/GameStatusTwo.js","components/GameOptions.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderNav","to","props","playerId","successCallback","playerName","onClick","e","window","confirm","axios","delete","then","res","catch","error","console","log","style","background","color","PlayerList","useState","players","setPlayers","useEffect","get","response","data","length","className","scope","map","player","index","preferredPosition","DeleteButton","_id","filter","AddPlayerForm","setPlayerName","setPreferredPosition","errors","setErrors","inputError","setInputError","err","justifyContent","onSubmit","preventDefault","post","navigate","errorResponse","errorArr","Object","keys","key","push","message","onChange","target","value","type","marginLeft","data-toggle","disabled","MenuOptions","path","GameStatusOne","updatedPlayer","setUpdatedPlayer","onClickHandler","gameTwo","gameThree","UpdatedPlayerStatus","put","playerStatus","game1","game2","game3","green","red","yellow","GameStatusThree","gameOne","GameStatusTwo","GameOptions","gameId","App","from","noThrow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7f62291.chunk.js","sourcesContent":["import {Link} from \"@reach/router\";\r\n\r\nconst HeaderNav = () => {\r\n    return <p><Link to={\"/players/list\"}>Manage Players</Link> | <Link to={\"/status/game/1\"}>Manager Player Status</Link></p>\r\n};\r\n\r\nexport default HeaderNav;","import axios from 'axios';\r\n\r\nexport default props => {\r\n    const { playerId, successCallback, playerName } = props;\r\n    const deletePlayer = e => {\r\n        const confirmWindow = window.confirm(\"Are you sure you want to remove \" + playerName + \"?\");\r\n        if (confirmWindow) {\r\n            axios.delete('http://localhost:8000/api/player/' + playerId)\r\n                .then(res => {\r\n                    successCallback();\r\n                })\r\n                .catch(error => console.log(\"There was an issue: \", error))\r\n        }\r\n    }\r\n    return (\r\n        <button onClick={deletePlayer} style={{background:\"red\", color:\"white\"}}>\r\n            Delete\r\n        </button>\r\n    )\r\n}","import axios from \"axios\"\r\nimport {useState, useEffect} from \"react\"\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst PlayerList = () => {\r\n    const [players, setPlayers] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/getAllPlayers\")\r\n            .then(response => setPlayers((response.data)))\r\n            .catch(error => console.log(\"There was an issue: \", error))\r\n    }, []);\r\n\r\n    const removeFromDom = playerId => {\r\n        setPlayers(players.filter(player => player._id !== playerId))\r\n    };\r\n\r\n    return(\r\n        <>\r\n            { players.length > 0 ?\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Player Name</th>\r\n                        <th scope=\"col\">Preferred Position</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        players.map((player, index) => {\r\n                            return(\r\n                                <tr key={index}>\r\n                                    <th scope=\"row\">{index + 1}</th>\r\n                                    <td>{player.playerName}</td>\r\n                                    <td>{player.preferredPosition}</td>\r\n                                    <td><DeleteButton playerId={player._id} successCallback={() => removeFromDom(player._id)} playerName={player.playerName}/></td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n                : <h1>Loading...</h1>\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default PlayerList;","import { useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport { navigate } from \"@reach/router\"\r\n\r\n\r\nconst AddPlayerForm = () => {\r\n    const [playerName, setPlayerName] = useState(\"\")\r\n    const [preferredPosition, setPreferredPosition] = useState(\"\")\r\n    const [errors, setErrors] = useState([])\r\n    const [inputError, setInputError] = useState(\" \")\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        axios.post(\"http://localhost:8000/api/createPlayer\", {\r\n            playerName,\r\n            preferredPosition\r\n        })\r\n            .then(() => navigate(\"/players/list\"))\r\n            .catch(err =>{\r\n                const errorResponse = err.response.data.errors; // Get the errors from err.response.data\r\n                const errorArr = []; // Define a temp error array to push the messages in\r\n                for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                // Set Errors\r\n                setErrors(errorArr);\r\n            })\r\n    }\r\n    const inputHandler = e =>{\r\n        if (e.target.value.length < 1)\r\n            setInputError(\"Player Name is required\")\r\n        else if (e.target.value.length < 2)\r\n            setInputError(\"Player Name must be at least 2 characters long\")\r\n        else{\r\n            setPlayerName(e.target.value);\r\n            setInputError(\"\");\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <h1>Add Player</h1>\r\n                    <p style={{color:\"red\"}}>{inputError}</p>\r\n                    <ul>{ errors.map((err, index) => <small key={index} style={{color:\"red\"}}><li>{err}</li></small>) }</ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\" style={{justifyContent: \"center\"}}>\r\n                <div className=\"col-6\">\r\n                    <form onSubmit={ onSubmit }>\r\n                        <div className=\"form-group\">\r\n                            <label>Player Name:</label>\r\n                            <input onChange={ inputHandler } type=\"text\" className=\"form-control\"/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Preferred Position:</label>\r\n                            <input onChange={(e)=>setPreferredPosition(e.target.value)} type=\"text\" className=\"form-control\"/>\r\n                        </div>\r\n                        <div className=\"form-group text-right\">\r\n                            <button className=\"btn btn-primary btn-sm\" style={{marginLeft: \"10px\"}} data-toggle=\"button\" disabled={inputError}>Submit</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddPlayerForm;","import {Link, Router} from \"@reach/router\";\r\nimport PlayerList from \"./PlayerList\";\r\nimport AddPlayerForm from \"./AddPlayerForm\";\r\n\r\nconst MenuOptions = () => {\r\n    return(\r\n        <>\r\n            <p><Link to={\"/players/list\"}>List</Link> | <Link to={\"/players/addPlayer\"}>Add Player</Link></p>\r\n            <Router>\r\n                    <PlayerList path={\"list\"}/>\r\n                    <AddPlayerForm path={\"addPlayer\"}/>\r\n            </Router>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default MenuOptions;","import {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst GameStatusOne = () => {\r\n    const [players, setPlayers] = useState([])\r\n    const [updatedPlayer, setUpdatedPlayer] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/getAllPlayers\")\r\n            .then(response => setPlayers((response.data)))\r\n            .catch(error => console.log(\"There was an issue: \", error))\r\n    }, [updatedPlayer]);\r\n\r\n    const onClickHandler = (e, playerId, playerName, preferredPosition, gameTwo, gameThree, UpdatedPlayerStatus) => {\r\n        e.preventDefault();\r\n        axios.put(\"http://localhost:8000/api/player/\" + playerId, {\r\n            playerName,\r\n            preferredPosition,\r\n            playerStatus: {\r\n                game1: UpdatedPlayerStatus,\r\n                game2: gameTwo,\r\n                game3:gameThree\r\n            }\r\n        })\r\n            .then(response => setUpdatedPlayer((response.data)))\r\n            .catch(error => console.log(\"There was an issue: \", error))\r\n    };\r\n\r\n    const green = (playerStatus) => {\r\n        if (playerStatus === \"Playing\")\r\n            return \"green\";\r\n    }\r\n\r\n    const red = (playerStatus) => {\r\n        if (playerStatus === \"Not Playing\")\r\n            return \"red\";\r\n    }\r\n\r\n    const yellow = (playerStatus) => {\r\n        if (playerStatus === \"Undecided\")\r\n            return \"yellow\";\r\n    }\r\n\r\n    return(\r\n        <>\r\n            { players.length > 0 ?\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Player Name</th>\r\n                        <th scope=\"col\">Status</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        players.map((player, index) => {\r\n                            return(\r\n                                <tr key={index}>\r\n                                    <th scope=\"row\">{index + 1}</th>\r\n                                    <td>{player.playerName}</td>\r\n                                    <td>{player.playerStatus.game1}</td>\r\n                                    <td>\r\n                                        <button style={ {background:green(player.playerStatus.game1)} } onClick={ (e) => onClickHandler(e, player._id, player.playerName, player.preferredPosition, player.playerStatus.game2, player.playerStatus.game3, \"Playing\") }>Playing</button>\r\n                                        <button style={ {background:red(player.playerStatus.game1)} } onClick={ (e) => onClickHandler(e, player._id, player.playerName, player.preferredPosition, player.playerStatus.game2, player.playerStatus.game3, \"Not Playing\") }>Not Playing</button>\r\n                                        <button style={ {background:yellow(player.playerStatus.game1)} } onClick={ (e) => onClickHandler(e, player._id, player.playerName, player.preferredPosition, player.playerStatus.game2, player.playerStatus.game3, \"Undecided\") }>Undecided</button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n                : <h1>Loading...</h1>\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GameStatusOne;","import {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst GameStatusThree = props => {\r\n    const [players, setPlayers] = useState([])\r\n    const [updatedPlayer, setUpdatedPlayer] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/getAllPlayers\")\r\n            .then(response => setPlayers((response.data)))\r\n            .catch(error => console.log(\"There was an issue: \", error))\r\n    }, [updatedPlayer]);\r\n\r\n    const onClickHandler = (e, playerId, playerName, preferredPosition, gameOne, gameTwo, UpdatedPlayerStatus) => {\r\n        e.preventDefault();\r\n        axios.put(\"http://localhost:8000/api/player/\" + playerId, {\r\n            playerName,\r\n            preferredPosition,\r\n            playerStatus: {\r\n                game1: gameOne,\r\n                game2: gameTwo,\r\n                game3: UpdatedPlayerStatus\r\n            }\r\n        })\r\n            .then(response => setUpdatedPlayer((response.data)))\r\n            .catch(error => console.log(\"There was an issue: \", error))\r\n    };\r\n\r\n    const green = (playerStatus) => {\r\n        if (playerStatus === \"Playing\")\r\n            return \"green\";\r\n    }\r\n\r\n    const red = (playerStatus) => {\r\n        if (playerStatus === \"Not Playing\")\r\n            return \"red\";\r\n    }\r\n\r\n    const yellow = (playerStatus) => {\r\n        if (playerStatus === \"Undecided\")\r\n            return \"yellow\";\r\n    }\r\n\r\n    return(\r\n        <>\r\n            { players.length > 0 ?\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Player Name</th>\r\n                        <th scope=\"col\">Status</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        players.map((player, index) => {\r\n                            return(\r\n                                <tr key={index}>\r\n                                    <th scope=\"row\">{index + 1}</th>\r\n                                    <td>{player.playerName}</td>\r\n                                    <td>{player.playerStatus.game3}</td>\r\n                                    <td>\r\n                                        <button style={ {background:green(player.playerStatus.game3)} } onClick={ (e) => onClickHandler(e, player._id, player.playerName, player.preferredPosition, player.playerStatus.game1, player.playerStatus.game2, \"Playing\") }>Playing</button>\r\n                                        <button style={ {background:red(player.playerStatus.game3)} } onClick={ (e) => onClickHandler(e, player._id, player.playerName, player.preferredPosition, player.playerStatus.game1, player.playerStatus.game2, \"Not Playing\") }>Not Playing</button>\r\n                                        <button style={ {background:yellow(player.playerStatus.game3)} } onClick={ (e) => onClickHandler(e, player._id, player.playerName, player.preferredPosition, player.playerStatus.game1, player.playerStatus.game2, \"Undecided\") }>Undecided</button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n                : <h1>Loading...</h1>\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GameStatusThree;","import {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst GameStatusTwo = props => {\r\n    const [players, setPlayers] = useState([])\r\n    const [updatedPlayer, setUpdatedPlayer] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/getAllPlayers\")\r\n            .then(response => setPlayers((response.data)))\r\n            .catch(error => console.log(\"There was an issue: \", error))\r\n    }, [updatedPlayer]);\r\n\r\n    const onClickHandler = (e, playerId, playerName, preferredPosition, gameOne, gameThree, UpdatedPlayerStatus) => {\r\n        e.preventDefault();\r\n        axios.put(\"http://localhost:8000/api/player/\" + playerId, {\r\n            playerName,\r\n            preferredPosition,\r\n            playerStatus: {\r\n                game1: gameOne,\r\n                game2: UpdatedPlayerStatus,\r\n                game3: gameThree\r\n            }\r\n        })\r\n            .then(response => setUpdatedPlayer((response.data)))\r\n            .catch(error => console.log(\"There was an issue: \", error))\r\n    };\r\n\r\n    const green = (playerStatus) => {\r\n        if (playerStatus === \"Playing\")\r\n            return \"green\";\r\n    }\r\n\r\n    const red = (playerStatus) => {\r\n        if (playerStatus === \"Not Playing\")\r\n            return \"red\";\r\n    }\r\n\r\n    const yellow = (playerStatus) => {\r\n        if (playerStatus === \"Undecided\")\r\n            return \"yellow\";\r\n    }\r\n\r\n    return(\r\n        <>\r\n            { players.length > 0 ?\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Player Name</th>\r\n                        <th scope=\"col\">Status</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        players.map((player, index) => {\r\n                            return(\r\n                                <tr key={index}>\r\n                                    <th scope=\"row\">{index + 1}</th>\r\n                                    <td>{player.playerName}</td>\r\n                                    <td>{player.playerStatus.game2}</td>\r\n                                    <td>\r\n                                        <button style={ {background:green(player.playerStatus.game2)} } onClick={ (e) => onClickHandler(e, player._id, player.playerName, player.preferredPosition, player.playerStatus.game1, player.playerStatus.game3, \"Playing\") }>Playing</button>\r\n                                        <button style={ {background:red(player.playerStatus.game2)} } onClick={ (e) => onClickHandler(e, player._id, player.playerName, player.preferredPosition, player.playerStatus.game1, player.playerStatus.game3, \"Not Playing\") }>Not Playing</button>\r\n                                        <button style={ {background:yellow(player.playerStatus.game2)} } onClick={ (e) => onClickHandler(e, player._id, player.playerName, player.preferredPosition, player.playerStatus.game1, player.playerStatus.game3, \"Undecided\") }>Undecided</button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n                : <h1>Loading...</h1>\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GameStatusTwo;","import {Link, Router} from \"@reach/router\";\r\nimport GameStatusOne from \"./GameStatusOne\";\r\nimport GameStatusThree from \"./GameStatusThree\";\r\nimport GameStatusTwo from \"./GameStatusTwo\";\r\n\r\nconst GameOptions = props => {\r\n\r\n    return(\r\n        <>\r\n            <h1>Player Status - Game {props.gameId}</h1>\r\n            <p><Link to={\"/status/game/1\"}>Game 1</Link> | <Link to={\"/status/game/2\"}>Game 2</Link> | <Link to={\"/status/game/3\"}>Game 3</Link></p>\r\n            <Router>\r\n                <GameStatusOne path={\"1\"}/>\r\n                <GameStatusTwo path={\"2\"}/>\r\n                <GameStatusThree path={\"3\"}/>\r\n            </Router>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GameOptions;","import './App.css';\nimport {Redirect, Router} from \"@reach/router\";\nimport HeaderNav from \"./components/HeaderNav\";\nimport MenuOptions from \"./components/MenuOptions\";\nimport GameStatusOne from \"./components/GameStatusOne\";\nimport GameOptions from \"./components/GameOptions\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <HeaderNav/>\n        <Router>\n            <Redirect to={\"/players/list\"} from={\"/\"} noThrow/>\n            <MenuOptions path={\"players/*\"}/>\n            <GameOptions path={\"status/game/*\"}/>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}